$date
	Sat Dec  9 12:49:10 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sync_arith_unit_29_tb $end
$var wire 4 ! o_status [3:0] $end
$var wire 32 " o_result [31:0] $end
$var parameter 32 # M $end
$var reg 1 $ clk $end
$var reg 1 % i_reset $end
$var reg 32 & iarg_A [31:0] $end
$var reg 32 ' iarg_B [31:0] $end
$var reg 4 ( iop [3:0] $end
$scope module UUT $end
$var wire 1 $ clk $end
$var wire 1 % i_reset $end
$var wire 32 ) iarg_A [31:0] $end
$var wire 32 * iarg_B [31:0] $end
$var wire 4 + iop [3:0] $end
$var wire 32 , div_remainder [31:0] $end
$var wire 32 - div_quotient [31:0] $end
$var wire 1 . div_error $end
$var parameter 32 / ERROR $end
$var parameter 32 0 M $end
$var parameter 32 1 NOT_EVEN_1 $end
$var parameter 4 2 OP_BITWISE_SHIFT $end
$var parameter 4 3 OP_COMPARE_AS $end
$var parameter 4 4 OP_DIVIDE $end
$var parameter 4 5 OP_ZM_TO_U2 $end
$var parameter 32 6 OVERFLOW $end
$var parameter 32 7 ZEROS $end
$var reg 32 8 o_result [31:0] $end
$var reg 4 9 o_status [3:0] $end
$scope module div_unit $end
$var wire 32 : dividend [31:0] $end
$var wire 32 ; divisor [31:0] $end
$var parameter 32 < M $end
$var reg 1 . error $end
$var reg 32 = quotient [31:0] $end
$var reg 32 > remainder [31:0] $end
$var reg 32 ? temp_dividend [31:0] $end
$var integer 32 @ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 <
b1 7
b0 6
b11 5
b10 4
b1 3
b0 2
b10 1
b100000 0
b11 /
b100000 #
$end
#0
$dumpvars
bx @
b0 ?
bx >
bx =
b0 ;
b0 :
bx 9
bx 8
1.
bx -
bx ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
1%
0$
bx "
bx !
$end
#5000
b0 "
b0 8
b0 !
b0 9
1$
#10000
0$
0%
#15000
1$
#20000
0$
1%
#25000
1$
#30000
b11111111111111111111111111111111 @
0.
b1111 ?
b0 ,
b0 >
b101 -
b101 =
0$
b11 '
b11 *
b11 ;
b1111 &
b1111 )
b1111 :
#35000
1$
#40000
0$
#45000
1$
#50000
b0 ,
b0 >
b11111111111111111111111111111111 @
b1010 ?
b10 -
b10 =
0$
b1 (
b1 +
b101 '
b101 *
b101 ;
b1010 &
b1010 )
b1010 :
#55000
b1 "
b1 8
1$
#60000
0$
#65000
1$
#70000
b0 ,
b0 >
b11111111111111111111111111111111 @
b10100 ?
b101 -
b101 =
0$
b10 (
b10 +
b100 '
b100 *
b100 ;
b10100 &
b10100 )
b10100 :
#75000
b101 "
b101 8
1$
#80000
0$
#85000
1$
#90000
b1 ,
b1 >
b11111111111111111111111111111111 @
b10000001 ?
b100000 -
b100000 =
0$
b11 (
b11 +
b10000001 &
b10000001 )
b10000001 :
#95000
b10000001 "
b10000001 8
1$
#100000
0$
#105000
1$
#110000
0$
#115000
1$
#120000
0$
#125000
1$
#130000
0$
#135000
1$
#140000
0$
#145000
1$
#150000
0$
#155000
1$
#160000
0$
#165000
1$
#170000
0$
#175000
1$
#180000
0$
#185000
1$
#190000
0$
#195000
1$
#200000
0$
#205000
1$
#210000
0$
